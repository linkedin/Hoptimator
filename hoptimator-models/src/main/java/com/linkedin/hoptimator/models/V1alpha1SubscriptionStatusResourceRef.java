/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.linkedin.hoptimator.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Reference to a resource owned by this Subscription.
 */
@ApiModel(description = "Reference to a resource owned by this Subscription.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-06T00:58:39.977Z[Etc/UTC]")
public class V1alpha1SubscriptionStatusResourceRef {
  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;


  public V1alpha1SubscriptionStatusResourceRef apiVersion(String apiVersion) {
    
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * Api version of the resource, e.g. hoptimator.linkedin.com/v1alpha1.
   * @return apiVersion
  **/
  @ApiModelProperty(required = true, value = "Api version of the resource, e.g. hoptimator.linkedin.com/v1alpha1.")

  public String getApiVersion() {
    return apiVersion;
  }


  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public V1alpha1SubscriptionStatusResourceRef kind(String kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Kind of the resource, e.g. KafkaTopic.
   * @return kind
  **/
  @ApiModelProperty(required = true, value = "Kind of the resource, e.g. KafkaTopic.")

  public String getKind() {
    return kind;
  }


  public void setKind(String kind) {
    this.kind = kind;
  }


  public V1alpha1SubscriptionStatusResourceRef name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the resource.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the resource.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1SubscriptionStatusResourceRef v1alpha1SubscriptionStatusResourceRef = (V1alpha1SubscriptionStatusResourceRef) o;
    return Objects.equals(this.apiVersion, v1alpha1SubscriptionStatusResourceRef.apiVersion) &&
        Objects.equals(this.kind, v1alpha1SubscriptionStatusResourceRef.kind) &&
        Objects.equals(this.name, v1alpha1SubscriptionStatusResourceRef.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, kind, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1SubscriptionStatusResourceRef {\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

