plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
  id 'application'
  id 'maven-publish'
  id 'idea'
}

configurations {
  integration.extendsFrom implementation
}

dependencies {
  implementation project(':hoptimator-planner')
  implementation project(':hoptimator-catalog')
  implementation project(':hoptimator-models')
 
  // include adapters in integration tests 
  integration project(':hoptimator-kafka-adapter')
  integration project(':hoptimator-mysql-adapter')
  integration project(':hoptimator-flink-adapter')
  integration libs.slf4jSimple

  implementation libs.calciteCore
  implementation libs.kubernetesClient
  implementation libs.kubernetesExtendedClient
  implementation libs.slf4jApi
  implementation libs.commonsCli
  
  testImplementation libs.junit
  testImplementation libs.assertj
}

application {
  mainClassName  = 'com.linkedin.hoptimator.operator.HoptimatorOperatorApp'
}

publishing {
  repositories {
    maven {
      name 'GitHubPackages'
      url = 'https://maven.pkg.github.com/linkedin/Hoptimator'
      credentials {
        username = System.getenv('GITHUB_ACTOR')
        password = System.getenv('GITHUB_TOKEN')
      }
    }
    maven {
      name 'LinkedInJFrog'
      url 'https://linkedin.jfrog.io/artifactory/hoptimator'
      credentials {
        username = System.getenv('JFROG_USERNAME')
        password = System.getenv('JFROG_API_KEY')
      }
    }
  }
  publications {
    maven(MavenPublication) {
      groupId = 'com.linkedin.hoptimator'
      artifactId = 'hoptimator-operator'
      version = System.getenv('VERSION')
      from components.java
    }
  }
}


shadowJar {
  configurations = [project.configurations.integration]

  // This is required for Flink and Avatica to play nicely
  relocate 'com.google', 'org.apache.flink.calcite.shaded.com.google'

  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
  zip64 true
  manifest.attributes 'Main-Class': 'com.linkedin.hoptimator.operator.HoptimatorOperatorApp'
  mainClassName  = 'com.linkedin.hoptimator.operator.HoptimatorOperatorApp'
  mergeServiceFiles()
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}
